load("data/nz.popn.reg.rda")
dimnames(nz.popn.reg)
dir()
dir("data-raw")
head(deaths)
tail(deaths)
tail(deaths, 20)
tail(deaths, 200)
tail(deaths)
head(deaths)
tail(deaths)
tail(deaths)
head(deaths)
head(deaths)
tail(deaths)
deaths
plot(dembase::Counts(deaths))
plot(dembase::Counts(deaths, dimscales = c(year = "Intervals")))
dir()
dir("data-raw")
dir("data-raw/Estimated resident population (ERP) 24 Oct 2016")
head(popn)
tail(popn)
head(popn)
tail(popn)
head(popn)
tail(popn)
head(popn)
tail(popn)
head(popn)
tail(popn)
plot(dembase::Counts(maori.popn, dimscales = c(year = "Intervals")))
plot(dembase::Counts(maori.popn, dimscales = c(year = "Points")))
dimnames(maori.deaths)
dimnames(maori.deaths)
devtools::document()
devtools::document()
devtools::document()
devtools::check()
head(lad)
tail(lad)
dir("data-raw/ONS_Deaths")
head(reg)
head(conc)
tail(conc)
dimnames(england.wales.deaths)
head(conc)
head(conc)
)
lad.wales
lad.wales
lad.wales
dir("data")
lad.wales
lad.wales
lad.wales
nrow(conc)
nrow(conc)
lad.wales
conc
lad.wales
conc[[1]]
conc[[2]]
lad.wales
conc.lad.rgn.wales
conc.lad.rgn
names(conc.lad.rgn)
conc.lad.rgn
conc.lad.rgn
conc.lad.rgn
england.wales.conc
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
library(demdata)
library(demdata)
library(tidyr)
library(tidyr)
dir()
dir("data-raw/sweden.deaths_sweden.popn")
filename <- "BE0101D9.csv"
file
args(read.csv)
?read.csv
traceback()
head(d)
tail(d)
head(d)
tail(d)
head(d)
tail(d)
d <- getData(filename)
head(d)
tail(d)
head(d)
tail(d)
head(d)
head(d)
head(d)
dd <- getData(filename)
dd <- getData(filename)
head(dd)
tail(dd)
print(levels(dd$region))
print(unique(dd$region))
iconv(unique(dd$region), "UTF-8", "ASCII")
head(dd)
dd <- getData(filename)
head(dd
)
dd <- getData(filename)
head(dd)
dd <- getData(filename)
head(dd)
tail(dd)
getwd()
dir("data-raw/sweden.deaths_sweden.popn")
head(sweden.deaths)
tail(sweden.deaths)
head(sweden.deaths)
sweden.deaths)
head(sweden.deaths)
tail(sweden.deaths)
unique(sweden.deaths$region)
levels(sweden.deaths$region)
tail(sweden.deaths)
head(sweden.popn[[1]])
tail(sweden.popn[[1]])
lev <- levels(sweden.popn[[1]]$region)
lev
lev <- unique(sweden.popn[[1]]$region)
lev
Encoding(lev)
inconv(lev, "UTF-8", "ASCII")
iconv(lev, "UTF-8", "ASCII")
iconv(lev, "UTF-8", "Latin1")
cat(lev)
cat(lev[3])
encodeString(lev[3])
cat(encodeString(lev[3]))
options("encoding")
unique(sweden.popn$region)
table(sweden.popn$region)
table(sweden.popn$region)
devtools::document()
devtools::document()
devtools::check()
devtools::check()
next
?repeat
?next
head(d)
head(d)
tail(d)
head(d)
head(d)
head(d)
tail(d)
head(d)
tail(d)
head(d$age)
head(d)
tail(d)
head(d)
head(d)
tail(d)
dimnames(iceland.migrants)
dimnames(iceland.migrants)
head(d)
tail(d)
dimnames(iceland.migrants)
head(d)
tail(d)
names(d)
head(d)
head(d)
tail(d)
head(d)
tail(x)
head(d)
head(d)
tail(d)
sum(d$counts != round(d$count))
sum(d$count != round(d$count))
mean(d$count != round(d$count))
getwd()
devtools::document()
devtools::check()
getwd()
head(d)
tail(d)
head(d)
tail(d)
table(d$age)
iceland.births
all(iceland.popn == round(iceland.popn))
all(iceland.popn == round(iceland.popn))
devtools::check()
head(sweden.births)
table(sweden.births$age.of.mother)
table(sweden.births$age)
head(sweden.births)
tail(sweden.births)
xtabs(count ~ age, sweden.births)
transform
?transform
?mutate
?mutate
help(pack = plyr)
help(pack = tidyr)
help(pack = dplyr)
?recode
library(dplyr)
?recode
?tbl
?tbl_cube
unique(sweden.births$age)
unique(sweden.births$age2)
head(sweden.births)
dimnames(sweden.births)
sum(sweden.births$count)
sum(sweden.births)
devtools::document()
devtools::check()
devtools::check()
dimnames(nz.intl.migr)
dir()
setwd("data-raw.R")
setwd("data-raw")
dir()
getwd()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::document()
tail(nz.popn.reg)
nz.popn.reg
select(nz.popn.reg, contains(age))
?select
select(nz.popn.reg, contains("age"))
unique(nz.popn.reg$age3)
unique(nz.popn.reg$age3)
unique(nz.popn.reg$age)
unique(nz.popn.reg$age_grp)
?read_csv
nz.int.mig.reg
tail(nz.int.mig.reg)
nz.int.mig.reg
select(nz.int.mig.reg, contains("13", "region"))
select(nz.int.mig.reg, contains("13|region"))
select(nz.int.mig.reg, contains("region"))
select(nz.int.mig.reg, contains("region"), contains("13"))
select(nz.int.mig.reg, contains("region"), contains("13"))
nz.int.mig.reg
nz.int.mig.reg
summary(nz.int.mig.reg$count)
xx <- as.integer(nz.int.mig.reg$count)
sum(is.na(xx))
filter(nz.int.mig.reg, is.na(as.integer(count)))
select(filter(nz.int.mig.reg, is.na(as.integer(count))), count)
max(as.integer(nz.int.mig.reg$count), na.rm = T)
min(as.integer(nz.int.mig.reg$count), na.rm = T)
median(as.integer(nz.int.mig.reg$count), na.rm = T)
?read_csv
nz.int.mig.reg
tail(nz.int.mig.reg)
tail(select(nz.int.mig.reg, count))
nz.deaths.reg
nz.ext.mig.reg
unique(nz.ext.mig.reg$age_grep)
unique(nz.ext.mig.reg$age_grp)
nz.ext.mig.reg
devtools::document()
head(nz.popn.reg)
tail(nz.popn.reg)
tail(nz.popn.reg)
nz.popn.reg
system("make")
devtools::document()
devtools::check()
devtools::document()
sheets
nz.school[[1]]
nz.school[[1]]
nz.school[[1]]
names(nz.school)
bind_rows
nz.school
nz.school
)
nz.school
nz.school
nz.school
tail(nz.school)
nz.school
nz.school
region.names
region.names
region.names
region.names
nz.school
nz.school
tail(nz.school)
nz.school
tail(nz.school)
separate
nz.school
tail(nz.school)
tail(nz.school)
head(nz.school)
nz.school
nz.school
levels(nz.school$age)
levels(nz.school$age)
levels(nz.school$age)
nz.school.age
)
nz.school
nz.regions
nz.region
region.names
)
nz.school
tail(nz.school)
recode
tail(nz.school)
tail(nz.school)
head(nz.school)
table(nz.school$sex)
tail(nz.school)
tail(nz.school)
head(nz.school)
head(nz.school, 20)
tail(nz.school)
head(nz.school)
nz.school
devtools::document()
system("make")
system("make")
devtools::document()
devtools::check()
devtools::document()
table(nz.ext.mig.reg)$age_grp
table(nz.ext.mig.reg$age_grp)
)
)
dimnames(nz.ext.mig.reg)
recode
table(nz.ext.mig.reg$region)
table(nz.ext.mig.reg$region)
system("make")
russia.births
tail(russia.births)
head(russia.births)
tail(russia.births)
head(russia.births)
tail(russia.births)
tail(russia.births)
devtools::document()
devtools::check()
devtools::check()
russia.births
russia.births
russia.births
russia.births
devtools::check()
devtools::document()
tail(nz.deaths.reg)
)
dimnames(nz.deaths.reg)
dir()
dir("data-raw/nz.injuries")
dir("data-raw/nz.injuries/Count of fatal and serious non-fatal injuries by sex")
path
dir("data-raw/nz.injuries")
nz.injuries
nz.injuries
tail(nz.injuries)
nz.injuries
tail(nz.injuries)
tail(nz.injuries)
head(nz.injuries)
xx <- xtabs(count ~ age + sex + year + cause, nz.injuries)
xxx <- dembase:::Counts(xx)
xxx <- filter(nz.injuries, age != "Total all ages") %>% dembase:::Counts(xx)
xx <- xtabs(count ~ age + sex + year + cause, nz.injuries, age != "Total all ages")
xxx <- dembase:::Counts(xx)
dimnames(xx)
head(nz.injuries)
head(nz.injuries)
nrow(nz.injuries)
getwd()
devtools::document()
devtools::document()
devtools::check()
400000/2000
getwd()
cd ..
system("make")
library(demdata)
nz.injuries
devtools::document()
devtools::check()
knitr::opts_chunk$set(collapse = TRUE, comment = "#>")
injuries <- demdata::nz.injuries
head(injuries)
unique(injuries$age)
class(injuries)
summary(injuries)
injuries <- subset(injuries, age != "Total all ages")
injuries <- subset(injuries, age != "Total all ages")
table(injuries$age)
unique(injuries$age)
injuries$age <- as.character(injuries.age)
injuries$age <- as.character(injuries$age)
Counts(xtabs(count ~ age + sex + cause + year, injuries))
library(dembase)
Counts(xtabs(count ~ age + sex + cause + year, injuries))
injuries$age <- sub(" years and over", "+", injuries$age)
unique(injuries$age)
injuries$age <- sub(" years", "+", injuries$age)
unique(injuries$age)
Counts(xtabs(count ~ age + sex + cause + year, injuries))
injuries$age <- sub(" years", "", injuries$age)
unique(injuries$age)
knitr::opts_chunk$set(collapse = TRUE, comment = "#>")
injuries <- demdata::nz.injuries
head(injuries)
summary(injuries)
injuries$age <- as.character(injuries$age)
injuries <- subset(injuries, age != "Total all ages")
unique(injuries$age)
injuries$age <- sub(" years and over", "+", injuries$age)
unique(injuries$age)
injuries$age <- sub(" years", "", injuries$age)
unique(injuries$age)
Counts(xtabs(count ~ age + sex + cause + year, injuries))
library(dembase)
Counts(xtabs(count ~ age + sex + cause + year, injuries))
knitr::opts_chunk$set(collapse = TRUE, comment = "#>")
injuries.df <- demdata::nz.injuries
head(injuries.df)
summary(injuries.df)
injuries.df$age <- as.character(injuries.df$age)
injuries.df <- subset(injuries.df, age != "Total all ages")
unique(injuries.df$age)
injuries.df$age <- sub(" years and over", "+", injuries.df$age)
unique(injuries.df$age)
injuries$age <- sub(" years", "", injuries$age)
injuries.df$age <- sub(" years", "", injuries.df$age)
unique(injuries.df$age)
injuries <- xtabs(count ~ age + sex + cause + year,
data = injuries.df)
injuries <- xtabs(count ~ age + sex + cause + year,
data = injuries.df)
injuries
class(injuries)
dimnames(injuries)
injuries[ , "Female", , "2015"]
library(dembase)
injuries <- Counts(injuries)
library(tidyverse)
injuries <- demdata::nz.injuries %>%
filter(age != "Total all ages")
mutate(age = recode(age, "90+" = "90 years and over"))
demdata::nz.injuries %>%
filter(age != "Total all ages") %>%
mutate(age = recode(age, "90+" = "90 years and over"))
injuries <- demdata::nz.injuries %>%
filter(age != "Total all ages") %>%
mutate(age = recode(age, "90+" = "90 years and over"))
unique(injuries$age)
injuries <- demdata::nz.injuries %>%
filter(age != "Total all ages") %>%
mutate(age = recode(age, "90 years and over" = "90+"))
unique(injuries$age)
injuries <- demdata::nz.injuries %>%
filter(age != "Total all ages") %>%
mutate(age = as.character(age),
age = recode(age, "90 years and over" = "90+"),
age = sub(" years", "", age))
injuries
injuries <- demdata::nz.injuries %>%
filter(age != "Total all ages") %>%
mutate(age = as.character(age),
age = recode(age, "90 years and over" = "90+"),
age = sub(" years", "", age)) %>%
xtabs(count ~ age + sex + year + cause,
data = .) %>%
Counts(dimscales = c(year = "Intervals"))
plot(injuries)
table(demdata::nz.injuries$year)
subset(nz.injuries, year == "2015")
subset(demdata::nz.injuries, year == "2015")
xtabs(count ~ year + cause, demdata::nz.injuries)
